<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{EBE073E3-F299-45DB-8D1A-DA44C106166A}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Camalot.Common.UnitTest</RootNamespace>
    <AssemblyName>Camalot.Common.UnitTest</AssemblyName>
    <TargetFrameworkVersion>v4.5.1</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ProjectTypeGuids>{3AC096D0-A1C2-E12C-1390-A8335801FDAB};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <VisualStudioVersion Condition="'$(VisualStudioVersion)' == ''">10.0</VisualStudioVersion>
    <VSToolsPath Condition="'$(VSToolsPath)' == ''">$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)</VSToolsPath>
    <ReferencePath>$(ProgramFiles)\Common Files\microsoft shared\VSTT\$(VisualStudioVersion)\UITestExtensionPackages</ReferencePath>
    <IsCodedUITest>False</IsCodedUITest>
    <TestProjectType>UnitTest</TestProjectType>
    <SolutionDir Condition="$(SolutionDir) == '' Or $(SolutionDir) == '*Undefined*'">..\</SolutionDir>
    <RestorePackages>true</RestorePackages>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Moq, Version=4.2.1408.717, Culture=neutral, PublicKeyToken=69f491c39445e920, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\packages\Moq.4.2.1408.0717\lib\net40\Moq.dll</HintPath>
    </Reference>
    <Reference Include="Moq.AutoMock">
      <HintPath>..\packages\Moq.AutoMock.0.3.2.1\lib\net40\Moq.AutoMock.dll</HintPath>
    </Reference>
    <Reference Include="Ploeh.AutoFixture, Version=3.20.1.0, Culture=neutral, PublicKeyToken=b24654c590009d4f, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\packages\AutoFixture.3.20.1\lib\net40\Ploeh.AutoFixture.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Drawing" />
  </ItemGroup>
  <Choose>
    <When Condition="('$(VisualStudioVersion)' == '10.0' or '$(VisualStudioVersion)' == '') and '$(TargetFrameworkVersion)' == 'v3.5'">
      <ItemGroup>
        <Reference Include="Microsoft.VisualStudio.QualityTools.UnitTestFramework, Version=10.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL" />
      </ItemGroup>
    </When>
    <Otherwise>
      <ItemGroup>
        <Reference Include="Microsoft.VisualStudio.QualityTools.UnitTestFramework" />
      </ItemGroup>
    </Otherwise>
  </Choose>
  <ItemGroup>
    <Compile Include="InExtensions\InAppDomain\ForGetTypesThatAre.cs" />
    <Compile Include="InExtensions\InAppDomain\ForWithAttribute.cs" />
    <Compile Include="InExtensions\InAssembly\ForGetTypesThatAre.cs" />
    <Compile Include="InExtensions\InAssembly\ForWithAttribute.cs" />
    <Compile Include="InExtensions\InByte\ForAsStream.cs" />
    <Compile Include="InExtensions\InByte\ForCompress.cs" />
    <Compile Include="InExtensions\InByte\ForDecompress.cs" />
    <Compile Include="InExtensions\InByte\ForGetString.cs" />
    <Compile Include="InExtensions\InByte\ForToBase64String.cs" />
    <Compile Include="InExtensions\InByte\ForToHex.cs" />
    <Compile Include="InExtensions\InColor\ForToHtmlHex.cs" />
    <Compile Include="InExtensions\InDateTime\ForEpoch.cs" />
    <Compile Include="InExtensions\InDateTime\ForRoundDown.cs" />
    <Compile Include="InExtensions\InDateTime\ForRoundUp.cs" />
    <Compile Include="InExtensions\InDateTime\ForToShortFriendlyString.cs" />
    <Compile Include="InExtensions\InDateTime\ForToFriendlyString.cs" />
    <Compile Include="InExtensions\InDateTime\ForToKind.cs" />
    <Compile Include="InExtensions\InDouble\ForIsEven.cs" />
    <Compile Include="InExtensions\InDouble\ForIsOdd.cs" />
    <Compile Include="InExtensions\InMatch\ForFirst.cs" />
    <Compile Include="InExtensions\InMatch\ForSingle.cs" />
    <Compile Include="InExtensions\InStream\ForToByteArray.cs" />
    <Compile Include="InExtensions\InUInteger\ForIsEven.cs" />
    <Compile Include="InExtensions\InUInteger\ForIsOdd.cs" />
    <Compile Include="InExtensions\InULong\ForIsEven.cs" />
    <Compile Include="InExtensions\InULong\ForIsOdd.cs" />
    <Compile Include="InExtensions\InLong\ForIsEven.cs" />
    <Compile Include="InExtensions\InLong\ForIsOdd.cs" />
    <Compile Include="InExtensions\InInteger\ForIsEven.cs" />
    <Compile Include="InExtensions\InInteger\ForIsOdd.cs" />
    <Compile Include="InExtensions\InUShort\ForIsEven.cs" />
    <Compile Include="InExtensions\InUShort\ForIsOdd.cs" />
    <Compile Include="InExtensions\InShort\ForIsEven.cs" />
    <Compile Include="InExtensions\InShort\ForIsOdd.cs" />
    <Compile Include="InExtensions\InDecimal\ForIsEven.cs" />
    <Compile Include="InExtensions\InDecimal\ForIsOdd.cs" />
    <Compile Include="InExtensions\InEnum\ForGetCustomAttribute.cs" />
    <Compile Include="InExtensions\InEnum\ForGetCustomAttributeValue.cs" />
    <Compile Include="InExtensions\InFieldInfo\ForGetCustomAttributeValue.cs" />
    <Compile Include="InExtensions\InFieldInfo\ForHasAttribute.cs" />
    <Compile Include="InExtensions\InFieldInfo\ForWithAttribute.cs" />
    <Compile Include="InExtensions\InFileInfo\ForGetMimeType.cs" />
    <Compile Include="InExtensions\InFloat\ForIsEven.cs" />
    <Compile Include="InExtensions\InFloat\ForIsOdd.cs" />
    <Compile Include="InExtensions\InGuid\ForIsEmpty.cs" />
    <Compile Include="InExtensions\InIEnumerable\ForFirstOrValue.cs" />
    <Compile Include="InExtensions\InIEnumerable\ForSingleOrValue.cs" />
    <Compile Include="InExtensions\InInList\ForIn.cs" />
    <Compile Include="InExtensions\InMatch\ForForEach.cs" />
    <Compile Include="InExtensions\InMemberInfo\ForGetCustomAttributeValue.cs" />
    <Compile Include="InExtensions\InMemberInfo\ForHasAttribute.cs" />
    <Compile Include="InExtensions\InMemberInfo\ForWithAttribute.cs" />
    <Compile Include="InExtensions\InMethodInfo\ForExtensionOf.cs" />
    <Compile Include="InExtensions\InMethodInfo\ForIsExtensionOf.cs" />
    <Compile Include="InExtensions\InMethodInfo\ForGetCustomAttributeValue.cs" />
    <Compile Include="InExtensions\InMethodInfo\ForHasAttribute.cs" />
    <Compile Include="InExtensions\InMethodInfo\ForIsExtension.cs" />
    <Compile Include="InExtensions\InMethodInfo\ForWithAttribute.cs" />
    <Compile Include="InExtensions\InOrValue\ForOr.cs" />
    <Compile Include="InExtensions\InParameterInfo\ForGetCustomAttributeValue.cs" />
    <Compile Include="InExtensions\InParameterInfo\ForHasAttribute.cs" />
    <Compile Include="InExtensions\InParameterInfo\ForWithAttribute.cs" />
    <Compile Include="InExtensions\InPropertyInfo\ForGetCustomAttributeValue.cs" />
    <Compile Include="InExtensions\InPropertyInfo\ForHasAttribute.cs" />
    <Compile Include="InExtensions\InPropertyInfo\ForWithAttribute.cs" />
    <Compile Include="InExtensions\InRequire\ForRequire.cs" />
    <Compile Include="InExtensions\InRequire\ForRequireNegative.cs" />
    <Compile Include="InExtensions\InRequire\ForRequirePositive.cs" />
    <Compile Include="InExtensions\InRequire\ForRequireZero.cs" />
    <Compile Include="InExtensions\InType\ForGetCustomAttribute.cs" />
    <Compile Include="InExtensions\InType\ForGetCustomAttributeValue.cs" />
    <Compile Include="InExtensions\InType\ForGetMethodsOfReturnType.cs" />
    <Compile Include="InExtensions\InType\ForHasAttribute.cs" />
    <Compile Include="InExtensions\InType\ForIsNullable.cs" />
    <Compile Include="InExtensions\InType\ForIsPrimitive.cs" />
    <Compile Include="InExtensions\InType\ForQualifiedName.cs" />
    <Compile Include="InExtensions\InType\ForWithAttribute.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Camalot.Common\Camalot.Common.csproj">
      <Project>{df6fe85f-0cf4-4f29-8a38-878d570e8f4d}</Project>
      <Name>Camalot.Common</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <None Include="app.config" />
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup>
    <Folder Include="InExtensions\InModule\" />
  </ItemGroup>
  <Choose>
    <When Condition="'$(VisualStudioVersion)' == '10.0' And '$(IsCodedUITest)' == 'True'">
      <ItemGroup>
        <Reference Include="Microsoft.VisualStudio.QualityTools.CodedUITestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
          <Private>False</Private>
        </Reference>
        <Reference Include="Microsoft.VisualStudio.TestTools.UITest.Common, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
          <Private>False</Private>
        </Reference>
        <Reference Include="Microsoft.VisualStudio.TestTools.UITest.Extension, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
          <Private>False</Private>
        </Reference>
        <Reference Include="Microsoft.VisualStudio.TestTools.UITesting, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
          <Private>False</Private>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
  <Import Project="$(VSToolsPath)\TeamTest\Microsoft.TestTools.targets" Condition="Exists('$(VSToolsPath)\TeamTest\Microsoft.TestTools.targets')" />
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Import Project="$(SolutionDir)\.nuget\NuGet.targets" Condition="Exists('$(SolutionDir)\.nuget\NuGet.targets')" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>